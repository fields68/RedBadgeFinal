@page "/element"

@inject IElementService _elementService

<h3>Elements</h3>
<a href="/element/create" class="btn btn-primary">Create an Element</a>
<hr />

<style>
	body {
		background-image: linear-gradient(#081252, #a79ecd);
	}

	h3 {
		color: #a79ecd;
	}

	table {
		background-color: #a79ecd;
	}

	tr:hover {
		background-color: antiquewhite;
	}
</style>

@if (Elements.Count() > 0)
{
	<table class="table table-striped">
		<thead>
			<tr>
				<th>Id</th>
				<th>Type</th>
				<th></th>
				<th></th>
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var element in Elements)
			{
				<tr>
					<td>@element.Id</td>
					<td>@element.Type</td>
					<td><a href="/search/element/@element.Id" class="btn btn-info">Characters</a></td>
					<td><a href="/element/edit/@element.Id" class="btn btn-success">Edit</a></td>
					<td><a href="/element/detail/@element.Id" class="btn btn-warning">Details</a></td>
					<td><a href="/element/delete/@element.Id" class="btn btn-danger">Delete</a></td>					
				</tr>
			}
		</tbody>
	</table>
}
else
{
	<p class="text-danger">Sorry, there are no avilable Elements at this time.</p>
}
@code {

	public List<ElementListItem> Elements = new();

	protected override async Task OnInitializedAsync()
	{
		Elements = await _elementService.GetElements();
	}

}
