@page "/search/element/{ElementId:int}"

@attribute [Authorize]
@inject ICharacterService _characterService
@inject IElementService _elementService
@inject IWeaponService _weaponService
@inject IRegionService _regionService

<h3>@GetElemInfo(ElementId) Characters</h3>

@if (Characters.Count() > 0)
{
	<table class="table table-striped">
		<thead>
			<tr>
				<th>Id</th>
				<th>Name</th>
				<th>Description</th>
				<th>Element</th>
				<th>Weapon</th>
				<th>Region</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var character in Characters)
			{
				@if (character.ElementId == ElementId)
				{
					charVar = true;
					<tr>
						<td>@character.Id</td>
						<td>@character.Name</td>
						<td>@character.Description</td>
						<td>@GetElemInfo(character.ElementId)</td>
						<td>@GetWeapInfo(character.WeaponId)</td>
						<td>@GetRegiInfo(character.RegionId)</td>
						<td>
							<a href="/character/edit/@character.Id" class="btn btn-success">Edit</a>
							<a href="/character/detail/@character.Id" class="btn btn-warning">Details</a>
							<a href="/character/delete/@character.Id" class="btn btn-danger">Delete</a>
						</td>
					</tr>
				}
				else
				{ }
			}
			@if (charVar == false)
			{
				<p class="text-danger">There are no Characters with this element.</p>						
			}
			else
			{}
		</tbody>
	</table>
	
	<a href="/element" class="btn btn-secondary btn-block mt-5">Back to List</a>
}
else
{
	<p class="text-danger">Sorry, there are no avilable Characters at this time.</p>
}


@code {
	private List<CharacterListItem> Characters = new();
	public List<ElementListItem> Elements = new();
	public List<WeaponListItem> Weapons = new();
	public List<RegionListItem> Regions = new();

	[Parameter]
	public int ElementId { get; set; }
	public bool charVar = false;

	protected override async Task OnInitializedAsync()
	{
		Characters = await _characterService.GetCharacters();
		Elements = await _elementService.GetElements();
		Weapons = await _weaponService.GetWeapons();
		Regions = await _regionService.GetRegions();
	}

	public string GetWeapInfo(int id)
	{
		var weaponType = "";

		foreach (var weapon in Weapons)
		{
			if (weapon.Id == id)
			{
				weaponType = weapon.Type;
				break;
			}
			else
				weaponType = "N/A";
		}
		return weaponType;
	}

	public string GetRegiInfo(int id)
	{
		var regionName = "";

		foreach (var region in Regions)
		{
			if (region.Id == id)
			{
				regionName = region.Name;
				break;
			}
			else
				regionName = "N/A";
		}
		return regionName;
	}

	public string GetElemInfo(int id)
	{
		var elementType = "";

		foreach (var element in Elements)
		{
			if (element.Id == id)
			{
				elementType = element.Type;
				break;
			}
			else
				elementType = "N/A";
		}
		return elementType;
	}
}
